{"version":3,"sources":["components/Statistics/Statistics.module.css","components/Notification/Notification.module.css","App.module.css","components/Section/Section.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Statistics/Statistics.jsx","components/Notification/Notification.jsx","App.jsx","index.js","components/FeedbackOptions/FeedbackOptions.module.css","components/Section/Section.module.css"],"names":["module","exports","Section","title","children","className","styles","section","FeedbackOptions","options","onLeaveFeedback","list","Object","entries","map","option","item","type","name","button","onClick","Statistics","good","neutral","bad","total","positivePercentage","grade","gradeCategory","gradeRating","Notification","message","prototype","PropTypes","string","isRequired","App","state","props","initialGood","initialNeutral","initialBad","event","target","setState","prevState","countTotalFeedback","values","reduce","accumulator","currentValue","countPositiveFeedbackPercentage","Math","round","this","React","Component","defaultProps","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.23bf2d43.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"gradeCategory\":\"Statistics_gradeCategory__1luSD\",\"gradeRating\":\"Statistics_gradeRating__2fRNH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Notification_message__eciZi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__16ZpL\"};","import PropTypes from 'prop-types';\nimport styles from './Section.module.css';\n\nfunction Section({ title, children }) {\n  return (\n    <section className={styles.section}>\n      {title && <h2 className={styles.title}>{title}</h2>}\n      {children}\n    </section>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n\nexport default Section;\n","import PropTypes from 'prop-types';\nimport styles from './FeedbackOptions.module.css';\n\nfunction FeedbackOptions({ options, onLeaveFeedback }) {\n  return (\n    <ul className={styles.list}>\n      {Object.entries(options).map(option => (\n        <li key={option[0]} className={styles.item}>\n          <button\n            type=\"button\"\n            name={option[0]}\n            className={styles.button}\n            onClick={onLeaveFeedback}\n          >\n            {option[0]}\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.objectOf(PropTypes.number),\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;\n","import PropTypes from 'prop-types';\nimport styles from './Statistics.module.css';\n\nfunction Statistics({ good, neutral, bad, total, positivePercentage }) {\n  return (\n    <ul className={styles.list}>\n      <li className={styles.item}>\n        <p className={styles.grade}>\n          <span className={styles.gradeCategory}>Good: </span>\n          <span className={styles.gradeRating}>{good}</span>\n        </p>\n      </li>\n      <li className={styles.item}>\n        <p className={styles.grade}>\n          <span className={styles.gradeCategory}>Neutral: </span>\n          <span className={styles.gradeRating}>{neutral}</span>\n        </p>\n      </li>\n      <li className={styles.item}>\n        <p className={styles.grade}>\n          <span className={styles.gradeCategory}>Bad: </span>\n          <span className={styles.gradeRating}>{bad}</span>\n        </p>\n      </li>\n\n      <li className={styles.item}>\n        <p className={styles.grade}>\n          <span className={styles.gradeCategory}>Total: </span>\n          <span className={styles.gradeRating}>{total}</span>\n        </p>\n      </li>\n      <li className={styles.item}>\n        <p className={styles.grade}>\n          <span className={styles.gradeCategory}>Positive feedback: </span>\n          <span className={styles.gradeRating}>{positivePercentage}%</span>\n        </p>\n      </li>\n    </ul>\n  );\n}\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n\nexport default Statistics;\n","import PropTypes from 'prop-types';\nimport styles from './Notification.module.css';\n\nfunction Notification({ message }) {\n  return <p className={styles.message}>{message}</p>;\n}\n\nNotification.prototype = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Section from './components/Section/Section';\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\nimport Statistics from './components/Statistics/Statistics';\nimport Notification from './components/Notification/Notification';\nimport styles from './App.module.css';\n\nclass App extends React.Component {\n  static defaultProps = {\n    initialGood: 0,\n    initialNeutral: 0,\n    initialBad: 0,\n  };\n\n  static propTypes = {\n    stats: PropTypes.shape({\n      good: PropTypes.number.isRequired,\n      neutral: PropTypes.number.isRequired,\n      bad: PropTypes.number.isRequired,\n    }),\n  };\n\n  state = {\n    good: this.props.initialGood,\n    neutral: this.props.initialNeutral,\n    bad: this.props.initialBad,\n  };\n\n  onLeaveFeedback = event => {\n    const target = event.target.name;\n    this.setState(prevState => ({\n      [target]: prevState[target] + 1, // оператор индекса\n    }));\n  };\n\n  countTotalFeedback = () =>\n    Object.values(this.state).reduce(\n      (accumulator = 0, currentValue) => accumulator + currentValue,\n    );\n\n  countPositiveFeedbackPercentage = () =>\n    Math.round((this.state.good * 100) / this.countTotalFeedback());\n\n  render() {\n    return (\n      <div className={styles.App}>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={this.state}\n            onLeaveFeedback={this.onLeaveFeedback}\n          />\n        </Section>\n\n        {this.countTotalFeedback() !== 0 && (\n          <Section title=\"Statistics\">\n            <Statistics\n              good={this.state.good}\n              neutral={this.state.neutral}\n              bad={this.state.bad}\n              total={this.countTotalFeedback()}\n              positivePercentage={this.countPositiveFeedbackPercentage()}\n            />\n          </Section>\n        )}\n\n        {this.countTotalFeedback() !== 0 || (\n          <Notification message=\"No feedback given\" />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"FeedbackOptions_list__2lRUp\",\"item\":\"FeedbackOptions_item__2mlJF\",\"button\":\"FeedbackOptions_button__3n-hy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__2S6oE\"};"],"sourceRoot":""}